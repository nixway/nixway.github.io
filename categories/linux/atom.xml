<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Категория: Linux | Путь юниксоида]]></title>
  <link href="http://nixway.org/categories/linux/atom.xml" rel="self"/>
  <link href="http://nixway.org/"/>
  <updated>2016-11-08T19:08:10+06:00</updated>
  <id>http://nixway.org/</id>
  <author>
    <name><![CDATA[nihi1ist]]></name>
    <email><![CDATA[nihi1ist@nixway.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Установка и настройка Octopress 2.0 с помощью RVM]]></title>
    <link href="http://nixway.org/2016/08/23/ustanovka-i-nastroika-octopress-2.0-s-pomocshyu-rvm/"/>
    <updated>2016-08-23T16:23:31+06:00</updated>
    <id>http://nixway.org/2016/08/23/ustanovka-i-nastroika-octopress-2.0-s-pomocshyu-rvm</id>
    <content type="html"><![CDATA[<p><img src="/images/posts/2016-08-23/octopress-install-and-configuring.png" alt="Octopress Install" /></p>

<p>По просьбе знакомого выкладываю инструкцию по установке и настройке <a href="http://octopress.org/">Octopress</a>. Octopress - это простой и удобный генератор статичных сайтов. Он поддерживает выгрузку на <a href="https://ru.wikipedia.org/wiki/GitHub">GitHub</a>, <a href="https://ru.wikipedia.org/wiki/Bitbucket">Bitbucket</a>, <a href="https://ru.wikipedia.org/wiki/Heroku">Heroku</a> или на ваш сервер с помощью <a href="https://ru.wikipedia.org/wiki/Rsync">Rsync</a>.</p>

<!-- more -->


<h3>Формирование рабочей среды для Octopress. <a name="ruby"></a></h3>

<p>В документации на официальном сайте указано, что для корректной работы Octopress требуется Ruby версии 1.9.3. Но у абсолютного большинства, в репозиториях предлагается версия от 2.1 и выше. В той же документации для того, чтобы установить версию&nbsp;1.9.3 предлагается использовать <a href="http://octopress.org/docs/setup/rbenv/">rbenv</a> или <a href="http://octopress.org/docs/setup/rvm">RVM</a>. Для себя я выбрал RVM <em>(Ruby Version Manager)</em>. На его примере мы и рассмотрим установку Octopress.</p>

<p>Для начала установим в систему необходимые пакеты:</p>

<pre><code># apt-get install nodejs git curl
</code></pre>

<p><span style="color:#cd0021;"><strong>ПРИМЕЧАНИЕ!</strong></span> Для наглядности, перед каждой командой будет указан определенный символ, если это <code>#</code> - значит команда выполняется от имени суперпользователя <strong>root</strong>, если символ <code>$</code> - то команда выполняется от имени текущего пользователя.</p>

<p>После чего установим RVM:</p>

<pre><code>$ curl -L https://get.rvm.io | bash -s stable
</code></pre>

<p>Подскажем системе, где искать RVM:</p>

<pre><code>$ source "$HOME/.rvm/scripts/rvm"
</code></pre>

<p>Чтобы в дальнейшем каждый раз не указывать путь до каталога с RVM, добавим путь до него в <em>.bashrc:</em></p>

<pre><code>$ echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm"' &gt;&gt; ~/.bashrc
</code></pre>

<p>Установим необходимую версию Ruby:</p>

<pre><code>$ rvm install 1.9.3
</code></pre>

<p>Перезапускаем RVM, и выбираем версию 1.9.3. С помощью ключа <code>--default</code> мы указываем, что будем использовать эту версию по умолчанию:
<code>
$ rvm reload
RVM reloaded!
$ rvm use --default 1.9.3
Using /home/nihi1ist/.rvm/gems/ruby-1.9.3-p551
</code></p>

<p>Смотрим какая версия Ruby используется в данный момент:</p>

<pre><code>$ ruby -v
Using /home/nihi1ist/.rvm/gems/ruby-1.9.3-p551
</code></pre>

<p>Отлично! Нужная версия Ruby установна и готова к использованию. Можно приступить к установке Octopress. Скачиваем с GitHub необходимые файлы:</p>

<p><span style="color:#cd0021;"><strong>ПРИМЕЧАНИЕ!</strong></span> Установщик может в процессе установки может затребовать пароль, для того чтобы установить в систему необходимые зависимости.</p>

<h3>Установка Octopress.</h3>

<pre><code>$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress
</code></pre>

<p>Установим gem с названием <strong>bundler</strong>:</p>

<pre><code>$ gem install bundler
</code></pre>

<p>Вышеупомянутый gem позволит нам установить другие gem'ы, указанные в файле <em>Gemfile</em>. Запустим команду установки:</p>

<pre><code>$ bundle install
Fetching gem metadata from https://rubygems.org/.........
Fetching version metadata from https://rubygems.org/..
Fetching dependency metadata from https://rubygems.org/.
Installing rake 10.4.2
Installing RedCloth 4.2.9 with native extensions
Installing blankslate 2.1.2.4
Installing chunky_png 1.3.5
...
Installing listen 3.0.5
Installing sinatra 1.4.6
Installing jekyll-watch 1.3.0
Installing jekyll 2.5.3
Installing octopress-hooks 2.6.1
Installing octopress-date-format 2.0.2
Bundle complete! 14 Gemfile dependencies, 48 gems now installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
Post-install message from compass:
    Compass is charityware. If you love it, please donate on our behalf at http://umdf.org/compass Thanks!
Post-install message from haml:

HEADS UP! Haml 4.0 has many improvements, but also has changes that may break
your application:

* Support for Ruby 1.8.6 dropped
* Support for Rails 2 dropped
* Sass filter now always outputs &lt;style&gt; tags
* Data attributes are now hyphenated, not underscored
* html2haml utility moved to the html2haml gem
* Textile and Maruku filters moved to the haml-contrib gem

For more info see:

http://rubydoc.info/github/haml/haml/file/CHANGELOG.md
</code></pre>

<p>Выхлоп сокращен.</p>

<p>Установим стандартную тему:</p>

<pre><code>$ rake install
</code></pre>

<p>Если вас не устраивает стандартная тема, то вы можете выбрать тему по вкусу <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">здесь</a>. Процесс установки альтернативной темы несложен. Переходим в каталог Octopress:</p>

<pre><code>$ cd octopress
</code></pre>

<p>Скачиваем нужную тему:</p>

<pre><code>$ git submodule add GIT_URL .themes/THEME_NAME
</code></pre>

<p>Где <code>GIT_URL</code> - имя репозитория темы, а <code>THEME_NAME</code> - имя темы. Теперь тема доступна для установки:</p>

<pre><code>$ rake install['THEME_NAME']
</code></pre>

<p>После чего заново генерируем сайт:</p>

<pre><code>$ rake generate
</code></pre>

<h3>Подготовка к развертыванию сайта на базе GitHub.</h3>

<p>В качестве платформы для сайта я решил выбрать GitHub, тому есть два аргумента, которые оказались лично для меня важными:<br/>
- бесплатный,<br/>
- поддерживает <code>CNAME</code>*</p>

<p>* Поддежка <code>CNAME</code> позволяет прикреплять произвольный домен к репозиторию.</p>

<p>Описывать <a href="https://github.com/join?source=header-home">регистрацию</a> на GitHub я не буду. Но опишу процесс создания репозитория. После того как вы зарегистрируетесь, создайте репозиторий (рис. 1):</p>

<p><a name="img1"></a><img src="/images/posts/2016-08-23/octopress-github-repository-create.png" alt="Create GitHub repository" />
<strong><em><center>Рисунок 1.</center></em></strong></p>

<p>Хочу обратить ваше внимание, что имя сайта должно быть идентично имени пользователя.</p>

<p><a name="img2"></a><a href="/images/posts/2016-08-23/octopress-github-repository-create-options.png"><img src="/images/posts/2016-08-23/octopress-github-repository-create-options-preview.png" alt="GitHub repository options" /></a>
<strong><em><center>Рисунок 2.</center></em></strong></p>

<p>После того как вы создадите репозиторий, система перенаправит вас на страницу с репозиторием. Так как репозиторий пуст, система покажет небольшую инструкцию с вариантами заполнения репозитория. В случае с Octopress, процессом выгрузки управляет специальный скрипт. Потому мы можем переходить к следующему шагу.</p>

<p><a name="img3"></a><a href="/images/posts/2016-08-23/octopress-github-repository-create-finish.png"><img src="/images/posts/2016-08-23/octopress-github-repository-create-finish-preview.png" alt="GitHub repository created" /></a>
<strong><em><center>Рисунок 3.</center></em></strong></p>

<p>Для выгрузки в репозиторий используется публичный SSH-ключ. Его можно добавить как в настройках репозитория (рис. 3, рис. 4), так и в настроках профиля. Если вы добавите ключ только для репозитория, он будет использоватся лишь для работы с указанным репозиторием.</p>

<p><a name="img4"></a><a href="/images/posts/2016-08-23/octopress-github-repository-ssh-key-add.png"><img src="/images/posts/2016-08-23/octopress-github-repository-ssh-key-add-preview.png" alt="Add SSH-key to repository" /></a>
<strong><em><center>Рисунок 4.</center></em></strong></p>

<p>Если у вас ещё нет публичного SSH-ключа, самое время создать его. Как это сделать, вы можете посмотреть <a href="https://community.nixway.org/viewtopic.php?pid=694">здесь</a>.</p>

<p>Теперь свяжем созданный выше репозиторий с каталогом Octopress. Для этого запустим команду <code>setup_github_pages</code>. В&nbsp;процессе команда запросит адрес репозитория, пример адреса показан на <a href="#img3">рис. 3</a>.</p>

<pre><code>$ rake setup_github_pages
Enter the read/write url for your repository
(For example, 'git@github.com:your_username/your_username.github.io.git)
           or 'https://github.com/your_username/your_username.github.io')
Repository url: git@github.com:nihi1ist/nihi1ist.github.io.git
</code></pre>

<p>Если вы все сделали верно, значит у вас настроена выгрузка в ваш репозиторий на GitHub.</p>

<h3>Настройка блога.</h3>

<p>Основные настройки хранятся в файле <em>_config.yml</em>. Сам файл расположен в корневой папке Octopress. Ниже приведу содержимое этого файла с комментариями.</p>

<div class="spoiler">
<input id="spoilerid_1" type="checkbox"><label for="spoilerid_1">
Пример файла конфигурации
</label><div class="spoiler_body">
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ----------------------- #
</span><span class='line'>#      Main Configs       #
</span><span class='line'># ----------------------- #
</span><span class='line'>
</span><span class='line'>url: http://yoursite.com
</span><span class='line'>title: Название вашего блога
</span><span class='line'>subtitle: Описание вашего блога
</span><span class='line'>author: Ваш Ник/Имя
</span><span class='line'>simple_search: https://www.google.com/search            # Поисковая система блога
</span><span class='line'>description:
</span><span class='line'>
</span><span class='line'># Формат даты по умолчанию "ordinal" (Пример: "July 22nd 2007")
</span><span class='line'># Как настроить формат даты показано на странице 
</span><span class='line'># http://www.ruby-doc.org/core-1.9.2/Time.html#method-i-strftime
</span><span class='line'># Кроме того, %o даст вам порядковый номер дня
</span><span class='line'>date_format: "ordinal"
</span><span class='line'>
</span><span class='line'># RSS / Email (необязательно) ссылки для подписки
</span><span class='line'># (изменится если использовать что нибудь вроде Feedburner)
</span><span class='line'>subscribe_rss: /atom.xml
</span><span class='line'>subscribe_email:
</span><span class='line'># RSS feeds can list your email address if you like
</span><span class='line'>email:
</span><span class='line'>
</span><span class='line'># ----------------------- #
</span><span class='line'>#    Jekyll & Plugins     #
</span><span class='line'># ----------------------- #
</span><span class='line'>
</span><span class='line'># Если вы хотите публиковать контент в подкаталог, например http://site.com/project
</span><span class='line'># тогда установите параметре корня сайта - 'root: /project'
</span><span class='line'>root: /
</span><span class='line'># С помощью параметра ниже можно задать формат пути для статьи
</span><span class='line'># можно так же использовать переменные :category 
</span><span class='line'>permalink: /blog/:year/:month/:day/:title/
</span><span class='line'>source: source
</span><span class='line'>destination: public
</span><span class='line'>plugins: plugins
</span><span class='line'>code_dir: downloads/code
</span><span class='line'>category_dir: blog/categories
</span><span class='line'>markdown: rdiscount
</span><span class='line'>rdiscount:
</span><span class='line'>  extensions:
</span><span class='line'>    - autolink
</span><span class='line'>    - footnotes
</span><span class='line'>    - smart
</span><span class='line'>highlighter: pygments # default python pygments have been replaced by pygments.rb
</span><span class='line'>
</span><span class='line'>paginate: 10                    # Количество сообщений на главной странице
</span><span class='line'>paginate_path: "posts/:num"     # Directory base for pagination URLs eg. /posts/2/
</span><span class='line'>recent_posts: 5                 # Количество сообщений в разделе Recent Posts
</span><span class='line'>excerpt_link: "Read on &rarr;"  # "Continue reading" Текст ссылки 
</span><span class='line'>excerpt_separator: "&lt;!--more--&gt;"# Разделитель для статьи
</span><span class='line'>
</span><span class='line'>titlecase: true                 # Converts page and post titles to titlecase
</span><span class='line'>
</span><span class='line'># Перечислите модули которые вы хотите добавить на боковую панель, в том порядке который вам нужен
</span><span class='line'># Для того чтобы добавить свой asides, создайте файл в директории /source/_includes/custom/asides/
</span><span class='line'># И добавьте их к списку ниже как 'asides/custom_aside_name.html'
</span><span class='line'>default_asides: [asides/recent_posts.html, asides/github.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]
</span><span class='line'>
</span><span class='line'># Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below
</span><span class='line'># and add an array with the asides you want to use.
</span><span class='line'># blog_index_asides:
</span><span class='line'># post_asides:
</span><span class='line'># page_asides:</span></code></pre></td></tr></table></div></figure>

</div></div>


<p>Комментарии переведены не до конца. Пользуюсь машинным переводом, но он не всегда может помочь. Со временем перевод конечно же будет закончен. Но если найдутся желающие помочь с переводом, буду рад.</p>

<h3>Создание страниц и сообщений.</h3>

<p>Процедура создания новых сообщений/страниц, достаточна проста. Вы можете указывать имя на кириллице, скрипт автоматически переведет название в транслит и укажет полученное название в имени файла. Если в имени нового сообщения/статьи есть пробелы, необходимо использовать кавычки. Несмотря на то, что в справке это не упоминается.</p>

<p>Новые сообщения создаются в каталоге <code>octopress/source/_posts</code> и имеют формат имени <code>YYYY-MM-DD-post-name.markdown</code>:</p>

<pre><code>$ rake new_post["Новое сообщение"]
mkdir -p source/_posts
Creating new post: source/_posts/2016-11-02-novoie-soobshchieniie.markdown
</code></pre>

<p>Созданный файл имеет следующую структуру:</p>

<pre><code>---
layout: post
title: "Новое сообщение"
date: 2016-11-02 12:58:46 +0600
comments: true
categories:
---
</code></pre>

<p>Это каркас сообщения. Настройки интуитивно понятны, можно разрешить/запретить комментарии, указать категорию (можно указать несколько категорий), функционал аналогичен функционалу тегов. Для разделения короткого и полного текста используется тег <code>&lt;!-- more --&gt;</code>.</p>

<p>Для новых страниц создается новый каталог с именем создаваемой страницы. К примеру создаем новую страницу:</p>

<pre><code>$ rake new_page["Новая страниц"]
mkdir -p source/novaia-stranitsa
Creating new page: source/novaia-stranitsa/index.markdown
</code></pre>

<p>В результате будет создан каталог, а уже в этом каталоге будет создан файл <code>index.markdown</code> со следующим содержимым:</p>

<pre><code>---
layout: page
title: "Новая страница"
date: 2016-11-02 12:55
comments: true
sharing: true
footer: true
---
</code></pre>

<p>Для создаваемых страниц я обычно отключаю комментарии, подвал и прочее. Для форматирования текста используется <a href="https://ru.wikipedia.org/wiki/Markdown">markdown</a>.</p>

<h3>Справка по rake.</h3>

<p>В документации Octopress на сайте разработчиков перечислены лишь несколько команд для rake: <code>generate</code>, <code>deploy</code>, <code>new_post</code>, <code>new_page</code> и др. На самом деле у <code>rake</code> для Octopress команд больше, посмотреть их список можно с помощью - <code>rake list</code>, а получить список с описанием команд можно вот так - <code>rake -T</code>:</p>

<pre><code>$ rake -T
rake clean                     # Очищает кэши: .pygments-cache, .gist-cache, .sass-cache
rake copydot[source,dest]      # Копирует dot-файлы для развертывания
rake deploy                    # Развертывает сгенерированный сайт на вашу платформу
rake gen_deploy                # Генерирует и развертывает сайт
rake generate                  # Генерирует сайт
rake install[theme_name]       # Устанавливает тему для сайта
rake integrate                 # Перемещает все посты, помещенные в stash командой isolate, обратно в
                               # posts-директорию, сайт при этом готов к генерации 
rake isolate[filename]         # Перемещает все посты, кроме того, над которым сейчас ведется работа,
                               # во временную директорию stash, что приводит к существенному ускорению
                               # генерации сайта
rake list                      # Показывает список доступных задач
rake new_page[filename]        # Создает новую страницу сайта в source/[filename]/index.markdown
rake new_post[title]           # Создает новый пост для сайта в source/_posts
rake preview                   # Предпросмотр сайта в браузере на локальной машине
rake push                      # Развертывает public-директорию через Git
rake rsync                     # Развертывает сайт через Rsync
rake set_root_dir[dir]         # Обновляет настройки для поддержки публикации в root или вложенную директорию
rake setup_github_pages[repo]  # Настраивает директорию _deploy и развертывает ветвь в Github Pages
rake update_source[theme]      # Перемещает source в source.old, устанавливает source theme updates,
                               # замещает source/_includes/navigation.html навигацией из source.old
rake update_style[theme]       # Перемещает sass в sass.old, устанавливает sass theme updates, заменяет
                               # sass/custom файлом sass.old/custom
rake watch                     # Предпросмотр сайта и автоматическая генерация при изменении файлов
                               # (не работает, хотя может я неправильно использую...)
</code></pre>

<p>Перевел в меру своих сил, если встретите неточность, пишите в комментариях.</p>

<h3>Локализация на русский язык</h3>

<p>К сожалению, Octopress не имеет локализации на русском языке. Но этот недостаток легко можно исправить вручную. Я ищу текст который нужно перевести с помощью команды <code>grep</code>.</p>

<pre><code>$ grep -irl "comments" source
</code></pre>

<p>Где <code>comments</code> - слово которое надо перевести, а <code>source</code> - каталог поиска.
Поиск должен проводиться в каталоге с файлами Octopress. Вы так же можете
переделать саму тему. И при последующей установке темы у вас уже будет сайт на
русском языке.</p>

<p>Для локализации дат, надо заменить содержимое файла:</p>

<pre><code>octopress/plugin/date.rb
</code></pre>

<p>на <a href="/files/date.rb.txt">это</a>. А содержимое файла:</p>

<pre><code>octopress/source/_includes/post/date.html
</code></pre>

<p>на <a href="/files/date.html.txt">это</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1С:Предприятие 8.3 + PostgreSQL 9.4 на базе Debian&nbsp;8&nbsp;&laquo;Jessie&raquo;]]></title>
    <link href="http://nixway.org/2015/11/10/1c-predpriyatie-8-3+postgresql-na-baze-debian-8-jessie/"/>
    <updated>2015-11-10T16:33:46+06:00</updated>
    <id>http://nixway.org/2015/11/10/1c-predpriyatie-8-3+postgresql-na-baze-debian-8-jessie</id>
    <content type="html"><![CDATA[<p><img src="/images/posts/2015-11-10/debian+1c+postgresql.png" alt="Debian + 1C + PostgreSQL" /></p>

<p>В конце мая 2013 года компания 1С представила первый стабильный релиз платформы 1С:Предприятие версии&nbsp;8.3. Главная особенность ветки&nbsp;8.3 - это выпуск нативного клиента под *nix-подобные операционные системы. И вот спустя два года я решил написать новую статью посвященную этой теме. Я помню, что большая часть тех, кому была интересна моя <a href="http://linuxforum.ru/topic/11116">прошлая статья</a> просили и дальше брать в основу Ubuntu. Тем не менее, я решил взять за основу Debian&nbsp;8&nbsp;&laquo;Jessie&raquo;. Основная причина в том, что производительность серверов 1С:Предприятие на Ubuntu оставляет желать лучшего. В то время как Debian и CentOS показывают более высокую производительность <span style="color:gray;font-style:italic">(CentOS даже опережает Debian, но я постараюсь исправить это положение)</span>. Сравнительные таблицы производительности серверов 1С:Предприятие вы можете поискать в интернете. Сам я пока ничего толкового не нашел.</p>

<!--more-->


<h2>Содержание<a name="content"></a></h2>

<p>1. <a href="#introduction">Предисловие</a><br/>
2. <a href="#lead-up">Подготовка сервера</a><br/>
3. <a href="#postgre">Установка PostgreSQL 9.4</a><br/>
4. <a href="#server">Установка сервера 1С:Предприятие 8.3</a><br/>
5. <a href="#hasp">Установка драйвера для аппаратной лицензии 1С (HASP)</a><br/>
6. <a href="#client">Установка клиента 1С:Предприятие 8.3</a><br/>
7. <a href="#apache24">Публикация ИБ на веб-сервере Apache 2.4</a><br/>
8. <a href="#afterword">Послесловие</a></p>

<h2>Предисловие.<a name="introduction"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Новичкам в *nix рекомендую выполнять установку по порядку и согласно инструкции. Статья специально разбита на главы, чтобы читатели могли пошагово проходить процесс установки. Вопросы любителей сделать &laquo;по своему&raquo; в большинстве своем будут проигнорированы. Если же вы всё делали согласно статье, но тем не менее у вас возникла проблема, внимательно проверьте все свои действия. Скорее всего, вы допустили ошибку. В случае если проверка не выявила ошибок, то вы можете описать возникую проблему в комментариях или в <a href="http://forum.nixway.org/viewtopic.php?id=55">теме</a> на нашем форуме, где форумчане постараются вам помочь. При этом рекомендую подробно описывать возникшую у вас проблему.</p>

<h2>Подготовка сервера.<a name="lead-up"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Основное отличие Debian от Ubuntu с которым очень часто сталкиваются пользователи Ubuntu, это отсутствие в стандартной конфигурации команды повышения привилегий <code>sudo</code>. Операции требующие прав <strong>root</strong>, выполняются от суперпользователя <strong>root</strong>. Тем же кто не хочет изменять своей привычке работать с <code>sudo</code>, достаточно при установке ОС не задавать пароль суперпользователю <strong>root</strong> и пакет <strong><em>sudo</em></strong> будет установлен и настроен. Для наглядности, перед каждой командой будет указан определенный символ, если это <code>#</code> - значит команда выполняется от имени суперпользователя <strong>root</strong>, если символ <code>$</code> - то команда выполняется от имени текущего пользователя.</p>

<p>1. Итак у вас имеется установленный Debian 8. Если установка только предстоит, рекомендую выбрать пункты:<br/>
-&nbsp;Сервер SSH<br/>
-&nbsp;Стандартные системные утилиты</p>

<p>Как это указано на скриншоте:</p>

<p><a href="/images/posts/2015-11-10/debian_preinstall_options.png"><img src="/images/posts/2015-11-10/debian_preinstall_options_preview.png" alt="Компоненты сервера" /></a></p>

<p>Остальные пункты на ваше усмотрение.</p>

<p>2. Сразу же поставим последние обновления, предварительно получив права <strong>root</strong>:</p>

<pre><code>$ su
# apt-get update
# apt-get upgrade
# apt-get dist-upgrade
</code></pre>

<p>3. Архивы с установочными пакетами можно скачать из интернета сразу на сервер или скопировать заранее скачанные установочные пакеты в расшаренный каталог <a href="https://ru.wikipedia.org/wiki/Samba">samba</a>. Предположу, что samba настроена не у всех, потому воспользуемся USB-накопителем (<em>флешкой</em>). Создаем в корне флешки каталоги:</p>

<pre><code>1с
postgre
hasp
</code></pre>

<p>Раскидываем пакеты по каталогам, предварительно распаковав их.</p>

<p>4. Создаем директорию, к которой будем монтировать флешку:</p>

<pre><code># mkdir /mnt/1cinstall
</code></pre>

<p>5. Подключаем флешку к серверу, просматриваем как она подключилась:</p>

<pre><code># fdisk -l

Disk /dev/sdb: 14,9 GiB, 16013852672 bytes, 31277056 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xcad4ebea

Device     Boot Start      End  Sectors  Size Id Type
/dev/sdb4  *       63 31277055 31276993 14,9G  7 HPFS/NTFS/exFAT
</code></pre>

<p>У меня это <code>sdb4</code>, теперь монтируем флешку сразу в каталог <em>1сinstall</em>:</p>

<pre><code># mount /dev/sdb4 /mnt/1cinstall
</code></pre>

<p>6. Проверяем что намонтировали:</p>

<pre><code># ls -l /mnt/1cinstall
</code></pre>

<p>Т.к. на моей флешке ничего не было кроме папок с установочными пакетами, отобразились только они:</p>

<pre><code>1с
postgres
hasp
</code></pre>

<p><span style="color:#cd0021;"><strong>ПРИМЕЧАНИЕ!</strong></span> Если вы ставите 1С:Предприятие на удаленную машину, то для передачи файлов можете воспользоваться утилитой <a href="http://ru.wikipedia.org/wiki/SCP">SCP</a>, которая входит в состав пакета <strong>openssh-client</strong>.</p>

<h2>Установка PostgreSQL 9.4<a name="postgre"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Для корректной работы PostgreSQL в связке с 1С:Предприятие, необходимо провести ряд подготовительных процедур.</p>

<p>1. Для начала надо установить необходимые локали. Это <code>en_US.UTF-8</code> и <code>ru_RU.UTF-8</code>. При этом локаль <code>ru_RU.UTF-8</code> должна быть выбрана по умолчанию. Отредактировать список локалей можно командой:</p>

<pre><code># dpkg-reconfigure locales
</code></pre>

<p>2. Затем надо установить зависимости:</p>

<pre><code># apt-get install ssl-cert libossp-uuid16 libxslt1.1
</code></pre>

<p>3. К сожалению, мейнтейнеры работающие на 1С, не следят за порядком в зависимостях своих пакетов. По этой простой причине, нам надо скачать и установить пакет <strong><em>libicu48</em></strong>:</p>

<pre><code># wget http://ftp.ru.debian.org/debian/pool/main/i/icu/libicu48_4.8.1.1-12+deb7u3_amd64.deb
</code></pre>

<p>Даем права на выполнение:</p>

<pre><code># chmod u+x libicu48*.deb
</code></pre>

<p>После чего устанавливаем:</p>

<pre><code># dpkg -i libicu48*.deb
</code></pre>

<p>4. Так же необходимо увеличить максимальный размер сегмента памяти до 64&nbsp;Мб:</p>

<pre><code># echo kernel.shmmax = `echo 64*1024*1024 | bc` &gt;&gt; /etc/sysctl.conf
</code></pre>

<p>Дабы необходимые изменения вступили в силу, вводим:</p>

<pre><code># sysctl -p
</code></pre>

<p>Тут товарищ Vasiliy P. Melnik в своем <a href="http://nixway.org/how-to/1c-predpriyatie-8-3+postgresql-na-baze-debian-8-jessie/#comment-2612897528">комментарии</a> пишет, что в данной процедуре необходимости нет. Я его утверждение не проверял, но вы можете попробовать пропустить 4 пункт. А если всё таки процедура потребуется, вы можете выполнить её позже.</p>

<p>5. В этой статье я решил использовать версию PostgreSQL от 1С. Переходим в каталог с пакетами PostgreSQL:</p>

<pre><code># cd /mnt/1cinstall/postgres
</code></pre>

<p>Проверяем что есть в каталоге:</p>

<pre><code># ls -l
итого 5424
drwxr-xr-x 2 nihi1ist nihi1ist    4096 окт  6 09:50 addons
-rwxr-xr-x 1 nihi1ist nihi1ist  120250 июн  2 12:41 libpq5_9.4.2-1.1C_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist 3657036 июн  2 12:42 postgresql-9.4_9.4.2-1.1C_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist 1069692 июн  2 12:42 postgresql-client-9.4_9.4.2-1.1C_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist   72172 авг 11 19:47 postgresql-client-common_154.1.1C_all.deb
-rwxr-xr-x 1 nihi1ist nihi1ist  163684 авг 11 19:47 postgresql-common_154.1.1C_all.deb
-rwxr-xr-x 1 nihi1ist nihi1ist  457782 июн  2 12:42 postgresql-contrib-9.4_9.4.2-1.1C_amd64.deb
</code></pre>

<p>Всего 6 пакетов, которые и нужно установить. В каталоге <em>addons</em>, находятся дополнительные пакеты, их я ставить не буду.</p>

<pre><code># dpkg -i *.deb
</code></pre>

<p>После установки проверим, запустился ли сервис PostgreSQL:</p>

<pre><code># service postgresql status
</code></pre>

<p>Если пакеты были установлены правильно, то вы получите примерно следующее сообщение (выхлоп):</p>

<pre><code>● postgresql.service - LSB: PostgreSQL RDBMS server
   Loaded: loaded (/etc/init.d/postgresql)
   Active: active (running) since Вт 2015-11-10 20:52:32 ALMT; 16s ago
  Process: 14225 ExecStop=/etc/init.d/postgresql stop (code=exited, status=0/SUCCESS)
  Process: 14274 ExecReload=/etc/init.d/postgresql reload (code=exited, status=0/SUCCESS)
  Process: 14235 ExecStart=/etc/init.d/postgresql start (code=exited, status=0/SUCCESS)
   CGroup: /system.slice/postgresql.service
           ├─14249 /usr/lib/postgresql/9.4/bin/postgres -D /var/lib/postgresql/9.4/main -c config_file=/etc/postgresql/9.4/main/postgresql...
           ├─14251 postgres: checkpointer process   
           ├─14252 postgres: writer process   
           ├─14253 postgres: wal writer process   
           ├─14254 postgres: autovacuum launcher process   
           └─14255 postgres: stats collector process   

ноя 10 20:52:32 as1 postgresql[14235]: Starting PostgreSQL 9.4 database server: main.
</code></pre>

<p>Если же вы получите сообщение похожее на это:</p>

<pre><code>● postgresql.service - LSB: PostgreSQL RDBMS server
   Loaded: loaded (/etc/init.d/postgresql)
   Active: active (exited) since Вт 2015-11-10 20:28:40 ALMT; 10min ago

ноя 10 20:28:40 as1 postgresql[11850]: No PostgreSQL clusters exist; see "man pg_createcluster" ... (warning).
</code></pre>

<p>Нас интересует последняя строчка, где  сообщается, что кластер PostgreSQL не обнаружен. Чтобы исправить эту ситуацию, достаточно просто перезапустить сервис PostgreSQL:</p>

<pre><code># service postgresql restart
</code></pre>

<p>После чего снова проверьте статус сервиса. В итоге вы должны получить что-то похожее на первое сообщение.</p>

<p>6. После установки нужно еще немного подправить конфигурационный файл. Как ни странно PostgreSQL будучи установленным из пакетов 1С, содержит неправильные настройки для обработки экранирующих символов, и при создании базы выдает ошибку:</p>

<pre><code>syntax error at or near "SECOND" at character 127
</code></pre>

<p>или</p>

<pre><code>syntax error at or near "SECOND" at character 227
</code></pre>

<p>Чтобы избежать вышеуказанных ошибок нужно отредактировать настройки PostgreSQL:</p>

<pre><code># vim /etc/postgresql/9.4/main/postgresql.conf
</code></pre>

<p>Приведя нижеуказанные параметры к следующему виду:</p>

<pre><code>backslash_quote = on
escape_string_warning = off
standard_conforming_strings = off
</code></pre>

<p>Обновим конфигурацию, не перезапуская сервис:</p>

<pre><code># service postgresql reload
</code></pre>

<p>7. Зададим пароль внутреннему пользователю PostgreSQL, предварительно авторизировавшись под системным пользователем <strong>postgres</strong>. Итак, авторизация:</p>

<pre><code># su postgres
</code></pre>

<p>Переход в домашний каталог текущего пользователя:</p>

<pre><code># cd
</code></pre>

<p>Смена пароля у внутреннего пользователя PostgreSQL:</p>

<pre><code>$ psql -U postgres -c "alter user postgres with password '123456';"
</code></pre>

<p>Где <code>-U postgres</code> - системный пользователь от имени которого будет запущен <code>psql</code>, <code>user postgres</code> - внутренний пользователь БД, ну а <code>123456</code> - <em>произвольный</em> пароль который будет задан внутреннему пользователю БД.</p>

<p>Если смена пароля прошла успешно, вы должны получить сообщение:</p>

<pre><code>ALTER ROLE
</code></pre>

<p>Выход из окружения системного пользователя <strong>postgres</strong>:
<code>
$ exit
</code></p>

<p>8. Напоследок зафиксируем пакеты PostgreSQL, чтобы они не обновлялись из стандартных репозиториев:</p>

<pre><code># apt-mark hold libpq5 postgresql-9.4 postgresql-client-9.4 postgresql-client-common postgresql-common postgresql-contrib-9.4
</code></pre>

<p>Если команда выполнена правильно, вы должны получить следующее сообщение:</p>

<pre><code>libpq5 помечен как зафиксированный.
postgresql-9.4 помечен как зафиксированный.
postgresql-client-9.4 помечен как зафиксированный.
postgresql-client-common помечен как зафиксированный.
postgresql-common помечен как зафиксированный.
postgresql-contrib-9.4 помечен как зафиксированный.
</code></pre>

<p>На этом установка PostgreSQL закончена. Вопросы настройки и оптимизации будут рассмотрены в отдельных статьях.</p>

<h2>Установка сервера 1С:Предприятие 8.3<a name="server"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Теперь нам предстоит установка сервера 1С:Предприятие. Как и в случае с PostgreSQL нам предстоит ряд подготовительных работ необходимых для штатного функционирования сервера 1С:Предприятие.</p>

<p>1. Переходим в из каталога <em>postgres</em> в каталог <em>1c</em>:</p>

<pre><code># cd ../1c
</code></pre>

<p>2. Устанавливаем дополнительные пакеты, которые необходимы для работы сервера:</p>

<pre><code># apt-get install imagemagick libglib2.0-0 libgsf-1-114 ttf-mscorefonts-installer t1utils unixodbc --no-install-recommends
</code></pre>

<p>3. Так как я не нашел достойной альтернативы пакету <strong><em>ttf2pt1</em></strong>, который не тянет кучу зависимостей. То я буду ставить его. В репозиториях его нету, скачаем из архива Debian:</p>

<pre><code># wget http://archive.debian.org/debian/pool/main/t/ttf2pt1/ttf2pt1_3.4.4-1.4_amd64.deb
</code></pre>

<p>Докачиваем <strong><em>libt1-5</em></strong> от которого зависит <strong><em>ttf2pt1</em></strong>:</p>

<pre><code># wget http://ftp.ru.debian.org/debian/pool/main/t/t1lib/libt1-5_5.1.2-3.6_amd64.deb
</code></pre>

<p>Даем права на выполнение:</p>

<pre><code># chmod u+x ttf2pt1*.deb libt1*.deb
</code></pre>

<p>Устанавливаем пакеты:</p>

<pre><code># dpkg -i ttf2pt1*.deb libt1*.deb
</code></pre>

<p>Кстати, жду предложений по возможной альтернативе пакету <strong><em>ttf2pt1</em></strong>.</p>

<p>4. Посмотрим, какие пакеты есть у нас в каталоге:</p>

<pre><code># ls -l
итого 628420
-rwxrwxrwx 1 nihi1ist nihi1ist 206202908 ноя 19 05:45 1c-enterprise83-client_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  19879626 ноя 19 05:45 1c-enterprise83-client-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  33830518 ноя 19 05:45 1c-enterprise83-common_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist   1607830 ноя 19 05:45 1c-enterprise83-common-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist 174945770 ноя 19 05:45 1c-enterprise83-server_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  60668720 ноя 19 05:45 1c-enterprise83-server-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist 135750258 ноя 19 05:45 1c-enterprise83-thin-client_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist   9980106 ноя 19 05:45 1c-enterprise83-thin-client-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist    190046 ноя 19 05:45 1c-enterprise83-ws_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist     11986 ноя 19 05:46 1c-enterprise83-ws-nls_8.3.7-1776_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist    173740 фев 24  2013 libt1-5_5.1.2-3.6_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist    236970 июн  8  2008 ttf2pt1_3.4.4-1.4_amd64.deb
</code></pre>

<p>Всего 8 пакетов, из которых нам для функционирования сервера 1С:Предприятия необходимы 3 пакета: <strong><em>1c-enterprise83-common</em></strong>, <strong><em>1c-enterprise83-server</em></strong>, <strong><em>1c-enterprise83-ws</em></strong>.</p>

<h5>Небольшая таблица с пояснениями по назначению пакетов:</h5>

<table>
<thead>
<tr>
<th> Название пакета </th>
<th> Описание пакета </th>
</tr>
</thead>
<tbody>
<tr>
<td> <em>1c_enterprise83-client…</em> </td>
<td> Компоненты клиента 1С Предприятие 8.3 для Linux </td>
</tr>
<tr>
<td> <em>1c_enterprise83-thin-client…</em> </td>
<td> Компоненты тонкого клиента 1С Предприятие 8.3 для Linux </td>
</tr>
<tr>
<td> <em>1c_enterprise83-common…</em> </td>
<td> Общие компоненты 1С Предприятие 8.3 для Linux </td>
</tr>
<tr>
<td> <em>1c_enterprise83-server…</em> </td>
<td> Сервер 1С Предприятие 8.2 для Linux </td>
</tr>
<tr>
<td> <em>1c_enterprise83-ws…</em> </td>
<td> Компоненты интернет-сервисов 1С Предприятие 8.3 для Linux </td>
</tr>
<tr>
<td> <em>1c_enterprise83-…-nls&hellip;</em> </td>
<td> Компоненты необходимые для ОС не поддерживающих кириллическую кодировку </td>
</tr>
</tbody>
</table>


<p>&nbsp;</p>

<p>5. Устанавливаем необходимые пакеты:</p>

<pre><code># dpkg -i 1c-enterprise83-common_8*.deb 1c-enterprise83-server_8*.deb 1c-enterprise83-ws_8.3*.deb
</code></pre>

<p>6. Даем пользователю <strong>usr1cv8</strong> и группе <strong>grp1cv8</strong> права на установочную директорию 1С:Предприятия:</p>

<pre><code># chown -R usr1cv8:grp1cv8 /opt/1C
</code></pre>

<p>7. В выхлопе установщика вы можете заметить предупреждение:</p>

<pre><code>update-rc.d: using dependency based boot sequencing
insserv: warning: script 'K01srv1cv83' missing LSB tags and overrides
insserv: warning: script 'srv1cv83' missing LSB tags and overrides
</code></pre>

<p>Начиная с версий 8.3.7, данная проблема исправлена. Потому, если вышеуказанного сообщения вы не получали, можете пропустить пункты&nbsp;8&nbsp;и&nbsp;9.</p>

<p>8. Сообщение описанное в пункте 7 мы получаем из-за отсутствия в скрипте запуска LSB-тегов. Ошибка не критична и никак не повлияет на работу сервера 1С:Предприятие. Но её легко можно решить, для этого добавим LSB-теги в сценарий сервиса 1С:Предприятие:</p>

<pre><code># vim /etc/init.d/srv1cv83
</code></pre>

<p>Находим строки:</p>

<pre><code>#!/bin/bash
#------------------------------------------------------------
# 1C:Enterprise server configuration parameters
#------------------------------------------------------------

# 1C:Enterprise server keytab file.
</code></pre>

<p>Приводим к следующему виду:</p>

<pre><code>#!/bin/bash
#------------------------------------------------------------
# 1C:Enterprise server configuration parameters
#------------------------------------------------------------

### BEGIN INIT INFO
# Provides:          srv1cv83
# Required-Start:    $remote_fs $network $syslog $named
# Required-Stop:     $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       1C:Enterprise 83 server.
### END INIT INFO

# 1C:Enterprise server keytab file.
</code></pre>

<p>После изменения сценария, запускаем:</p>

<pre><code># systemctl daemon-reload
</code></pre>

<p>9. Перезапускаем службу сервера 1С:Предприятие:</p>

<pre><code># service srv1cv83 restart
</code></pre>

<p>10. Проверяем запускаются ли при старте системы сервер 1С:Предприятие:</p>

<pre><code># netstat -atn|grep 0.0.0.0:15
</code></pre>

<p>Вы должны получить примерно такое сообщение:</p>

<pre><code>tcp        0      0 0.0.0.0:1560            0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:1540            0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:1541            0.0.0.0:*               LISTEN
</code></pre>

<p>11. Так же для профилактики можно проверить, все ли процессы сервера запущены:</p>

<pre><code># ps aux|grep 1c
</code></pre>

<p>От имени пользователя <strong>usr1cv8</strong> должно быть запущено три процесса: <em>ragent</em>, <em>rmngr</em> и <em>rphost</em>. После имен процессов идут номера портов, через которые они работают:</p>

<pre><code>usr1cv8  16832  0.3  1.8 357780 35668 ?        Ssl  21:39   0:01 /opt/1C/v8.3/x86_64/ragent -daemon
usr1cv8  16835  0.8  5.4 955616 104104 ?       Sl   21:39   0:04 /opt/1C/v8.3/x86_64/rmngr -port 1541 -host as1 -range 1560:1591 -clstid 96f2358c-87be-11e5-049f-080027e1f738
usr1cv8  16862  0.3 10.6 848588 204580 ?       Sl   21:39   0:01 /opt/1C/v8.3/x86_64/rphost -range 1560:1591 -reghost as1 -regport 1541 -pid 97c8c4c6-87be-11e5-049f-080027e1f738
root     16940  0.0  0.1  13968  2220 pts/0    S+   21:48   0:00 grep 1c
</code></pre>

<h2>Установка драйвера для аппаратной лицензии 1С (HASP)<a name="hasp"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Большая часть новичков впервые столкнувшиеся с процессом установки 1С:Предприятие не могут понять о какой лицензии, ключе, <a href="https://ru.wikipedia.org/wiki/HASP">HASP</a> идет речь. Итак, лицензия&nbsp;1С необходима для запуска продуктов 1С:Предприятие. Лицензии&nbsp;1С можно разделить на аппаратные и программные. Мы рассмотрим аппаратную лицензию (<a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%BE%D0%BA%D0%B5%D0%BD_(%D0%B0%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8"><em>USB-токен</em></a>). Аппаратные ключи&nbsp;1С делятся на 3 вида и их можно отличить по цвету:<br/>
-&nbsp;<span style="color:green">зеленый</span> - серверный ключ&nbsp;1С (сервер&nbsp;1С:Предприятия),<br/>
-&nbsp;<span style="color:blue">синий</span> (<span style="color:purple">фиолетовый</span>) - ключ&nbsp;1С, который поставляется вместе с конфигурацией и является однопользовательским,<br/>
-&nbsp;<span style="color:red">красный</span> - лицензии на пользователей, данный ключ&nbsp;1С может приобретаться отдельно в том случае, если у Вас уже есть в наличие какая-либо конфигурация 1С:Предприятие.</p>

<p><strong>Клиентское приложение допускает использование следующих ключей HASP:</strong><br/>
-&nbsp;локальный клиентский ключ серии ORGL8 на 1 пользователя,<br/>
-&nbsp;сетевой клиентский ключ серии ORGL8 на 5, 10, 20, 50, и 100 пользователей,<br/>
-&nbsp;сетевой клиентский ключ серии ORGLА на 300 пользователей,<br/>
-&nbsp;сетевой клиентский ключ серии ORGLВ на 500 пользователей.</p>

<p>Причём на одном компьютере может быть установлено не более одного ключа одной серии. Подробнее о видах лицензии и ключей вы можете прочитать <a href="http://www.1service.ru/price/litsenzii_klyuchi_1s.php">здесь</a>.</p>

<p>Из вышеуказанного следует - нам нужны два типа лицензий. <em>Лицензия для сервера</em> 1С:Предприятие и <em>лицензия для клиента</em> 1С:Предприятие. После того как мы выяснили какие ключи нам необходимы, можно перейти к установке драйвера. Свежий драйвер можно <a href="http://safenet-sentinel.ru/helpdesk/download-space/">скачать</a> на официальном сайте. Большинству подойдет HASP 4, его и скачивайте.</p>

<p>1. Как вы помните, всё необходимое я уже скачал, потому просто переходим из каталога <em>1с</em>, в каталог <em>hasp</em>:</p>

<pre><code># cd ../hasp
</code></pre>

<p>Проверим, что есть в каталоге:</p>

<pre><code># ls -l
итого 2872
-rw-r--r-- 1 nihi1ist nihi1ist 2918898 авг 26 14:08 aksusbd_7.40-1_i386.deb
-rw-r--r-- 1 nihi1ist nihi1ist   16851 авг 26 14:08 readme.html
</code></pre>

<p>Установочный пакет есть, но нет прав на выполнение. Дадим права на выполнение владельцу:</p>

<pre><code># chmod a+x aksusbd*.deb
</code></pre>

<p>После чего установим пакет:</p>

<pre><code># dpkg -i aksusbd*.deb
</code></pre>

<p>2. После установки сервис не запустился, запустим его:</p>

<pre><code># service aksusbd start
</code></pre>

<p>Если сервис запустился штатно, команда просто отработает не выдав сообщений. Проверить запущен ли сервис можно командой:</p>

<pre><code># service aksusbd status
</code></pre>

<p>Вы должны получить сообщение:</p>

<pre><code>● aksusbd.service - LSB: Sentinel LDK RTE
   Loaded: loaded (/etc/init.d/aksusbd)
   Active: active (exited) since Чт 2015-12-03 19:37:12 ALMT; 10s ago
  Process: 3848 ExecStart=/etc/init.d/aksusbd start (code=exited, status=0/SUCCESS)

дек 03 19:37:12 hst1 aksusbd[3848]: Starting AKSUSB daemon: .
дек 03 19:37:12 hst1 aksusbd[3848]: Starting WINEHASP daemon: .
дек 03 19:37:12 hst1 aksusbd[3848]: Starting HASPLM daemon: .
</code></pre>

<p>  <span style="color:#cd0021;"><strong>ПРЕДУПРЕЖДЕНИЕ!</strong></span> Для 64-битного сервера 1С:Предприятие, нужен 64-битный серверный HASP-ключ. 32-битный серверный HASP-ключ с 64-битным сервером 1С:Предприятие работать не будет!</p>

<p>  <span style="color:#cd0021;"><strong>ПРИМЕЧАНИЕ!</strong></span> Сервер 1С:Предприятие под *nix-подобные операционные системы не требует наличия серверного ключа, если число пользользователей не превышает 12. В этом случае требуется наличие только клиентских лицензий. Однако, согласно правилам лицензирования, организация должна приобрести серверный ключ.</p>

<p>На этом установка драйвера закончена.</p>

<h2>Установка клиента 1С:Предприятие 8.3<a name="client"></a> <a href="#content" title="К содержанию">↑</a></h2>

<h3>Установка клиента</h3>

<p>Итак, дано: рабочая станция с Debian&nbsp;8&nbsp;&laquo;Jessie&raquo; + DE Cinnamon на борту. Я предпочел Cinnamon, но каждый может выбрать <a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%80%D0%B5%D0%B4%D0%B0_%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE_%D1%81%D1%82%D0%BE%D0%BB%D0%B0">окружение</a> <em>(DE)</em> себе по вкусу. Можно приступить к установке клиента 1С:Предприятие.</p>

<p>1. По уже заведенной традиции, устанавливаем дополнительные пакеты, необходимые для работы 1С:Предприятие:</p>

<pre><code># apt-get install libwebkitgtk-1.0-0 imagemagick libglib2.0-0 libgsf-1-114 ttf-mscorefonts-installer t1utils unixodbc --no-install-recommends
</code></pre>

<p>2. На памятной флешке, имеются также пакеты клиента. Подключим флешку как указано в пунктах 4 и 5, главы <a href="#lead-up">Подготовка сервера</a> и сразу перейдем в каталог с пакетами 1С:Предприятие:</p>

<pre><code># cd /mnt/1cinstall/1c
</code></pre>

<p>Посмотрим, что имеется в каталоге:</p>

<pre><code># ls -l
итого 628420
-rwxrwxrwx 1 nihi1ist nihi1ist 206202908 ноя 19 05:45 1c-enterprise83-client_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  19879626 ноя 19 05:45 1c-enterprise83-client-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  33830518 ноя 19 05:45 1c-enterprise83-common_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist   1607830 ноя 19 05:45 1c-enterprise83-common-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist 174945770 ноя 19 05:45 1c-enterprise83-server_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist  60668720 ноя 19 05:45 1c-enterprise83-server-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist 135750258 ноя 19 05:45 1c-enterprise83-thin-client_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist   9980106 ноя 19 05:45 1c-enterprise83-thin-client-nls_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist    190046 ноя 19 05:45 1c-enterprise83-ws_8.3.7-1776_amd64.deb
-rwxrwxrwx 1 nihi1ist nihi1ist     11986 ноя 19 05:46 1c-enterprise83-ws-nls_8.3.7-1776_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist    173740 фев 24  2013 libt1-5_5.1.2-3.6_amd64.deb
-rwxr-xr-x 1 nihi1ist nihi1ist    236970 июн  8  2008 ttf2pt1_3.4.4-1.4_amd64.deb
</code></pre>

<p>3. Есть два варианта установки клиента. <em>Первый вариант</em> - установка полноценного клиента (включает толстый и тонкий клиенты), <em>второй вариант</em> - установка тонкого клиента. В случае с установкой полноценного клиента, необходимо также устанавливать и серверную часть.</p>

<p>3.1. Сначала рассмотрим установку полноценного клиента:</p>

<pre><code># dpkg -i 1c-enterprise83-client_8*.deb 1c-enterprise83-common_8*.deb 1c-enterprise83-server_8*.deb ttf2pt1*.deb libt1*.deb
</code></pre>

<p>После чего надо выполнить процедуры указанные в пунктах с 6 по 9, главы <a href="#server">Установка сервера 1С:Предприятие 8.3</a>.</p>

<p>3.2. Тонкий клиент, можно устанавливать на те машины, где не планируется использование толстого клиента. Преимущество тонкого клиента, это отсутствие зависимостей от компонентов сервера 1С:Предприятие, а также возможность работать через интернет. Итак, установка тонкого клиента:</p>

<pre><code># dpkg -i 1c-enterprise83-thin-client_8*.deb
</code></pre>

<p><strong> В каких случаях нам необходим толстый клиент?</strong><br/>
- Работа с конфигуратором,<br/>
- Создание информационных баз,<br/>
- Проведение объемных вычислений (в случае толстого клиента, все вычисления проводятся на стороне клиента).</p>

<p>Подробнее о тонких и толстых клиентах можно почитать <a href="http://v8.1c.ru/overview/Term_000000121.htm">здесь</a>.</p>

<p>4. Теперь нам необходимо выбрать каким способом мы будем взаимодействовать с сервером. В зависимости от обстоятельств и предпочтений, вы можете <a href="http://nixway.org/how-to/ustanovka-i-nastroika-bind9-na-debian-jessie/">установить DNS-сервер</a>, или прописывать имя сервера на каждой клиентской машине вручную:</p>

<pre><code># vim /etc/hosts
</code></pre>

<p>Надо добавить строку:</p>

<pre><code>192.168.1.1     as1     as1.nixway.loc
</code></pre>

<p>Где <code>192.168.1.1</code> - IP-адрес сервера, <code>as1</code> - имя сервера, <code>as1.nixway.loc</code> - имя сервера в локальном домене, его указывать не обязательно.</p>

<p>5. После того как вы добавили вышеуказанную строку, проверьте, доступен ли сервер по указанному имени:</p>

<pre><code># ping -c4 as1.nixway.loc
</code></pre>

<p>Вы должны получить примерно такой ответ:</p>

<pre><code>PING as1.nixway.loc (192.168.56.101) 56(84) bytes of data.                                                                                   
64 bytes from as1.nixway.loc (192.168.56.101): icmp_seq=1 ttl=64 time=0.212 ms
64 bytes from as1.nixway.loc (192.168.56.101): icmp_seq=2 ttl=64 time=0.309 ms
64 bytes from as1.nixway.loc (192.168.56.101): icmp_seq=3 ttl=64 time=0.315 ms
64 bytes from as1.nixway.loc (192.168.56.101): icmp_seq=4 ttl=64 time=0.258 ms

--- as1.nixway.loc ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3000ms
rtt min/avg/max/mdev = 0.212/0.273/0.315/0.045 ms
</code></pre>

<p>Установка клиента закончена, можно приступать к созданию информационной базы.</p>

<h3>Создание информационной базы.</h3>

<p>Для начала можно (но совсем необязательно) установить демонстрационную конфигурацию. Дабы продемострировать работую так называемого &laquo;Управляемого приложения&raquo;. Демонстрационная конфигурация идет в комплекте с 1С:Предприятие 8.3. Установщик конфигурации представлен в виде простого скрипта. Потому, описывать процесс установки я не буду, просто выложу несколько скриншотов процесса установки:</p>

<p><a href="/images/posts/2015-11-10/1c_demo_1.png"><img src="/images/posts/2015-11-10/1c_demo_1_preview.png" alt="Установка демо конфигурации" /></a></p>

<p>1. Создание информационных баз на *nix-подобных ОС должно проходить из под толстого клиента. В противном случае вы рискуете получить ошибку:</p>

<p><img src="/images/posts/2015-11-10/1c_error_1.png" alt="Создание ИБ. Ошибка" /></p>

<p>Кроме вышеуказанной ошибки, встречается и другая, но уже в толстом клиенте. Когда при добавлении новой ИБ 1С:Предприятие выдает сообщение:</p>

<p><img src="/images/posts/2015-11-10/1c_error_2.png" alt="Создание ИБ. Ошибка" /></p>

<p>ИБ создается, но 1С:Предприятие некорректно обрабатывает её создание. В этом случае достаточно просто добавить ИБ в список:</p>

<p><a href="/images/posts/2015-11-10/1c_02.1.png"><img src="/images/posts/2015-11-10/1c_02.1_preview.png" alt="Создание ИБ. Добавление существующей ИБ" /></a></p>

<p>Вышеуказанные ошибки будут рассмотрены в отдельной статье.</p>

<p>2. При первом запуске 1С:Предприятие сразу же предлагает нам добавить информационную базу (ИБ), жмем <kbd>Да</kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_01.png" alt="Создание ИБ. Добавление" /></p>

<p>3. Выбираем пункт <em>Создание новой информационной базы,</em> жмем <kbd>Далее ></kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_02.png" alt="Создание ИБ. Новая" /></p>

<p>4. Выбраем шаблон конфигурации для создаваемой ИБ или же создаем ИБ без конфигурации, жмем <kbd>Далее ></kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_03.png" alt="Создание ИБ. Конфигурация" /></p>

<p>5. Задаем имя ИБ и выбираем пункт <em>На сервере 1С:Предприятия,</em> жмем <kbd>Далее ></kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_04.png" alt="Создание ИБ. Сервер" /></p>

<p>6. По порядку указываем: доменное имя или IP-адрес сервера 1С:Предприятие, имя ИБ, параметры соединения, тип СУБД, адрес сервера баз данных (БД), имя БД на сервере БД, имя пользователя сервера БД, пароль пользователя сервера БД, жмем <kbd>Далее ></kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_05.png" alt="Создание ИБ. Параметры подключения" /></p>

<p>7. Параметры запуска оставляем без изменений, жмем <kbd>Готово</kbd>:</p>

<p><img src="/images/posts/2015-11-10/1c_06.png" alt="Создание ИБ. Параметры запуска" /></p>

<p>8. Если вы всё сделали правильно, то через некоторое время ИБ будет создана и вы увидите её в списке:</p>

<p><img src="/images/posts/2015-11-10/1c_07.png" alt="Создание ИБ. Список ИБ" /></p>

<p>9. Теперь, когда мы создали ИБ, можно её запустить. Как вы помните, я создавал ИБ из шаблона демонстрационной конфигурации. Так выглядит рабочее окно этой конфигурации:</p>

<p><a href="/images/posts/2015-11-10/1c_08.png"><img src="/images/posts/2015-11-10/1c_08_preview.png" alt="Режим - 1С:Предприятие" /></a></p>

<p>Ну и конечно же конфигуратор:</p>

<p><a href="/images/posts/2015-11-10/1c_09.png"><img src="/images/posts/2015-11-10/1c_09_preview.png" alt="Режим - Конфигуратор" /></a></p>

<h2>Публикация ИБ на веб-сервере Apache 2.4<a name="apache24"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Хочу обрадовать тех, кому не хватало возможности публикации информационной базы на веб-сервере Apache. Добавление поддержки последней версии Apache, я заметил при установке 1С:Предприятие версии 8.3.8.1652. Может поддержка Apache 2.4 появилась и раньше. Но проверять мне было лень, а новостей на эту тему я не нашел. Даже на <a href="http://v8.1c.ru/requirements/">официальном сайте</a> 1С, на данный момент устаревшая информация. Процесс публикации не изменился. <strong><em>Обращаю особое внимание, что процесс установки описан для Apache не ниже 2.4.</em></strong></p>

<p>Создаем директорию для vrd-файла:</p>

<pre><code># mkdir -p /var/www/ib/ibname
</code></pre>

<p>А также файл конфигурации Apache:</p>

<pre><code># touch /etc/apache2/conf-available/ibname.conf
</code></pre>

<p>Переходим в каталог со утилитой публикации веб-клиента:</p>

<pre><code># cd /opt/1C/v8.3/x86_64/
</code></pre>

<p>Запускаем утилиту:</p>

<pre><code># ./webinst -apache24 -wsdir ibname -dir '/var/www/ib/ibname' -connstr 'Srvr="as1.nixway.loc";Ref="ibname";' -confPath /etc/apache2/conf-available/ibname.conf
</code></pre>

<p>Где <code>/var/www/ib/ibname</code> - директория где будет создан vrd-файл, <code>ibname</code> - имя ИБ, <code>as1.nixway.loc</code> - адрес сервера 1С:Предпрятие, а <code>/etc/apache2/conf-available/ibname.conf</code> - путь до конфигурационного файла Apache.</p>

<p>Подключаем конфигурацию:</p>

<pre><code># a2enconf ibname
</code></pre>

<p>Перечитываем конфигурацию Apache:</p>

<pre><code># service apache2 reload
</code></pre>

<p>Если процедура публикации была проведена корректно, ИБ будет доступна по адресу:</p>

<pre><code>http[s]://server_ip|server_name/ibname
</code></pre>

<p><a href="/images/posts/2015-11-10/1c_10.png"><img src="/images/posts/2015-11-10/1c_10_preview.png" alt="Режим - Веб-клиент" /></a></p>

<h2>Послесловие<a name="afterword"></a> <a href="#content" title="К содержанию">↑</a></h2>

<p>Прошу в комментариях задавать вопросы только по статье. Если же вы найдете в статье ошибку или у вас есть предложения, просьбы, вопросы выходящие за рамки статьи, можете оставлять их на нашем <a href="https://community.nixway.org">форуме</a>, в специально созданной <a href="https://community.nixway.org/viewtopic.php?pid=589">теме</a>.</p>

<p>Напоминаю копипастерам, использование прямой ссылки на оригинальную статью обязательно.</p>

<p><em>Статья обновлена 10 августа 2016 года.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка и настройка Bind9 на Debian&nbsp;8&nbsp;&laquo;Jessie&raquo;]]></title>
    <link href="http://nixway.org/2015/05/01/ustanovka-i-nastroika-bind9-na-debian-jessie/"/>
    <updated>2015-05-01T09:29:13+06:00</updated>
    <id>http://nixway.org/2015/05/01/ustanovka-i-nastroika-bind9-na-debian-jessie</id>
    <content type="html"><![CDATA[<p><img src="/images/posts/2015-05-01/debian+bind9.png" alt="Bind9" /></p>

<p>В сети очень много статей на тему установки и настройки DNS-сервера Bind9. Они разные. Некоторые написаны просто и доступно, но нет пояснений зачем и почему. В других материал подан очень подробно, но новичкам такой материал осилить сложно. Я же попытаюсь совместить достоинства способов подачи материала, нащупать ту золотую середину, которая подойден большинству. Но опять таки, я не претендую на истину в последней инстанции и готов принять конструктивную критику.</p>

<!--more-->


<p>Итак, вступление закончено, приступим к самой статье. Я как приверженнец Debian, буду описывать процесс установки и настройки именно на этой ОС. Дано Debian&nbsp;8&nbsp;&laquo;Jessie&raquo; установленный вот с такими параметрами <em>(Ну разве кроме пункта <strong>web server</strong>, он пригодится тем, кто в дальнейшем будет работать с веб-сервером Apache):</em><br/>
<a href="/images/posts/2015-05-01/debian_preinstall_options.png"><img src="/images/posts/2015-05-01/debian_preinstall_options_preview.png" alt="Debian preinstall options" /></a></p>

<h4>Настройки сети:</h4>

<pre><code>IP адрес роутера 192.168.1.1
IP адрес сервера 192.168.1.10
Имя домена nixway.loc
</code></pre>

<p>Для решения данной задачи настроим сервер таким образом, чтобы при обращении по доменному имени внутри сети он отвечал по локальному адресу. Все комманды выполняются от имени суперпользователя (<strong>root</strong>).</p>

<p>Сначала установим необходимые пакеты:
<code>
apt-get -y install bind9 dnsutils
</code></p>

<p>Теперь необходимо настроить файл конфигурации Bind9:
<code>
vim /etc/bind/named.conf.options
</code></p>

<p>Приведём его к следующему виду:
<code>
acl mynetwork {192.168.1.0/24; 127.0.0.1; };
options {
    directory "/var/cache/bind";
    auth-nxdomain no;
    forwarders {192.168.1.1; 8.8.8.8; };
    listen-on-v6 { none; };
    allow-query { mynetwork; };
};
</code></p>

<p><strong>Расшифровка:</strong><br/>
<code>acl</code> - создает <a href="https://ru.wikipedia.org/wiki/ACL">ACL</a> (<em>Access control list</em>) - так называемый список контроля доступа, с помощью которого мы ограничиваем диапазон адресов которые могут запрашивать зоны с нашего сервера. В данном примере это разрешено подсети <code>192.168.1.0/24</code>. и <a href="https://ru.wikipedia.org/wiki/Localhost">локальному хосту</a>.<br/>
<code>allow-query { mynetwork; };</code> - список тех, кто имеет право запрашивать  информацию. Можно ограничить с помошью <em>acl</em> либо установить <code>allow-query { any; };</code> - что будет означать, что запросы разрешенмы всем.<br/>
<code>forwarders {192.168.1.1; 8.8.8.8; };</code> - это DNS провайдера, или любые другие, у которых можно получить информацию о доменах неизвестных вашему серверу.<br/>
<code>listen-on-v6 { none; }</code> - запрещает работать с IPv6.</p>

<h3>Настройка зон</h3>

<p>Для начала покорректируем файл локальной конфигурации Bind9:
<code>
vim /etc/bind/named.conf.local
</code></p>

<p>Этот файл содержит локальную конфигурацию DNS-сервера, в нем объявляются зоны, связанные с доменами этого сервера. Добавляем в него файлы наших зон (зону прямого просмотра и зону обратного просмотра):
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zone &ldquo;nixway.loc&rdquo; {
</span><span class='line'>    type master;
</span><span class='line'>    file &ldquo;/etc/bind/zones/nixway/flz.nixway.zone&rdquo;;
</span><span class='line'>};&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;zone &ldquo;1.168.192.in-addr.arpa&rdquo; {
</span><span class='line'>    type master;
</span><span class='line'>    file &ldquo;/etc/bind/zones/nixway/rlz.nixway.zone&rdquo;;
</span><span class='line'>};&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>### Зона прямого просмотра
</span><span class='line'>Зона в DNS — это часть пространства имён DNS, управляемая конкретным сервером или группой серверов DNS. Зона прямого просмотра - это тип зоны в которой доменное имя преобразуется в IP-адрес. Создадим файл для зоны прямого просмотра:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;vim /etc/bind/zones/nixway/flz.nixway.zone</span></code></pre></td></tr></table></div></figure></p>

<p>Со следующим содержимым:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>;
</span><span class='line'>; Зона прямого просмотра
</span><span class='line'>;
</span><span class='line'>$TTL 30
</span><span class='line'>$ORIGIN nixway.loc.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;@               IN      SOA     ns1.nixway.loc. admin.nixway.loc. (
</span><span class='line'>        2015050101      ; Serial
</span><span class='line'>                1d      ; Refresh
</span><span class='line'>                1h      ; Retry
</span><span class='line'>                1w      ; Expire
</span><span class='line'>                2h      ; Negative Cache TTL
</span><span class='line'>)&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;@               IN      NS      ns1.nixway.loc.
</span><span class='line'>@               IN      NS      ns.provider.org.
</span><span class='line'>@               IN      A       192.168.1.10&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ns1             IN      A       192.168.1.10
</span><span class='line'>nixway.loc      IN      A       192.168.1.10&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;www             IN      CNAME   nixway.loc.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>В конце этого файла нужно обязательно оставить пустую строку!
</span><span class='line'>
</span><span class='line'>**Расшифровка:**  
</span><span class='line'>`$ORIGIN` - оригинальное имя зоны  
</span><span class='line'>`ns1.nixway.loc.`  - Наш DNS-сервер (точка в конце обязательна).  
</span><span class='line'>`admin.nixway.loc.` - email администратора сервера, где вместо символа @ используется точка.  
</span><span class='line'>`Serial` - серийный номер зоны в формате ГГГГММДД и номер текущего изменения за этот день. (Важно, при каждом изменении, нужно редактировать этот номер увеличивая его в большую сторону) Пример: `2015020301.`  
</span><span class='line'>`Refresh` - период времени с которым вторичный сервер днс обращается к основному.  
</span><span class='line'>`Retry` - период с которым вторичный сервер будет повторять попытки при неудачном обновлении.  
</span><span class='line'>`Expire` - максимальное время использования данных на вторичном сервере, после которого делается обязательное обновление.  
</span><span class='line'>`Negative Cache TTL` - время актуальности данных в кэше запросов.  
</span><span class='line'>
</span><span class='line'>Далее идут записи имён хостов с ip-адресами или псевдонимами.  
</span><span class='line'>`ns.provider.org.` - вместо этой записи можете указать NS вашего регистратора либо Free DNS сервиса.
</span><span class='line'>
</span><span class='line'>### Зона обратного просмотра
</span><span class='line'>Зона обратного просмотра, выполняет преобразование IP-адреса в доменное имя. Создадим файл для зоны обратного просмотра:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;vim /etc/bind/zones/nixway/rlz.nixway.zone</span></code></pre></td></tr></table></div></figure></p>

<p>И запишем туда следующее:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>;
</span><span class='line'>; Зона обратного просмотря для nixway.loc
</span><span class='line'>;
</span><span class='line'>$TTL 30
</span><span class='line'>@               IN      SOA     ns1.nixway.loc. root.nixway.loc. (
</span><span class='line'>         201505013      ; Serial
</span><span class='line'>                1d      ; Refresh
</span><span class='line'>                1h      ; Retry
</span><span class='line'>                1w      ; Expire
</span><span class='line'>                2h      ; Negative Cache TTL
</span><span class='line'>)&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;@               IN      NS      nixway.loc.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;10              IN      PTR     ns1.nixway.loc.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>В этом файле должны быть только записи типа `PTR`. В конце этого файла так же должна быть пустая строка. Число `10` - это последний [октет](https://ru.wikipedia.org/wiki/%D0%9E%D0%BA%D1%82%D0%B5%D1%82_%28%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0%29) в IP адресе нашего сервера.
</span><span class='line'>
</span><span class='line'>Например, можно добавить в файл зоны прямого просмотра строку:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;router          IN      A       192.168.1.1</span></code></pre></td></tr></table></div></figure></p>

<p>А в файл зоны обратного просмотра строку:
<code>
1               IN      PTR     router.nixway.loc.
</code></p>

<p>Тогда по адресу <code>router.nixway.loc</code> в браузере будет открываться web-интерфейс роутера (эквивалентно <em>192.168.1.1</em>), но только внутри локальной сети.</p>

<h3>Проверка</h3>

<p>Проверим файлы зон на наличие ошибок командой:
<code>
named-checkconf -z
</code></p>

<p>Если ошибок нет, обновим информацию о зонах:
<code>
rndc reload
</code></p>

<p>Теперь необходимо отредактировать <em>resolv.conf</em>:
<code>
vim /etc/resolv.conf
</code></p>

<p>Приводим его в следующий вид:
<code>
domain nixway.loc
search nixway.loc
nameserver 192.168.1.10
nameserver 192.168.1.1
</code></p>

<p>Проверку можно сделать двумя командами:
<code>
nslookup nixway.loc
nslookup 192.168.1.10
</code></p>

<p>Которые должны выдать cледующий результат:
<code>
Имя:   nixway.loc
Address: 192.168.1.10
</code></p>

<h3>Последние штрихи</h3>

<p>Если DHCP у вас раздает роутер, не забудьте установить выдаваемые по умолчанию DNS сервера 192.168.1.10 и 192.168.1.1
Проверьте корректность работы, введя в консоли Windows-машины
<code>
tracert nixway.loc
</code></p>

<p>Если маршрут пошел сразу на адрес  192.168.1.10, значит все работает корректно. Если нет, пропробуйте очистить кэш DNS и посторить еще раз:
<code>
ipconfig /flushdns
</code></p>

<p>Не забудьте пробросить необходимые порты на роутере, если это необходимо конечно.</p>

<p><a href="http://forum.nixway.org/viewtopic.php?id=27">Обсуждение</a> статьи на форуме.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка и настройка LNMP на CentOS, Debian и Gentoo]]></title>
    <link href="http://nixway.org/2013/06/12/ustanovka-i-nastroika-lnmp-na-centos-debian-gentoo/"/>
    <updated>2013-06-12T16:15:21+06:00</updated>
    <id>http://nixway.org/2013/06/12/ustanovka-i-nastroika-lnmp-na-centos-debian-gentoo</id>
    <content type="html"><![CDATA[<p><img src="/images/posts/2013-06-12/nginx_to_centos_debian_and_gentoo.png" alt="nginx to CentOS, Debian and Gentoo" /></p>

<p>Это руководство открывает серию материалов по установке известных систем управления содержимым (<a href="http://ru.wikipedia.org/wiki/CMS">CMS</a>) на веб-сервер <a href="https://ru.wikipedia.org/wiki/Nginx">nginx</a>. В отдельную статью необходимо выделить общую часть, которая будет одинаковой для всех CMS, написанных на PHP (грубо говоря мы сделаем тот же <a href="http://ru.wikipedia.org/wiki/LAMP">LAMP</a>, только вместо громоздкого и неповоротливого веб-сервера <a href="https://ru.wikipedia.org/wiki/Apache_HTTP_Server">Apache</a> у нас будет nginx). Задача данного руководства – установка веб-сервера nginx, системы управления базами данных MySQL и менеджера процессов FastCGI (FPM), а также их настройка.</p>

<!--more-->


<p>* Конфигурация и установка отдельных CMS будут описаны в дополнительных материалах.</p>

<h2>Установка и запуск nginx, MySQL, PHP-FPM (Linux, nginx, MySQL, PHP - LNMP)</h2>

<p>Все приведенные ниже инструкции сначала были выполнены.<br/>
Небольшие пояснения:<br/>
- символ <code>#</code> (решётка) - означает выполнение команды от <strong>root</strong> (суперпользователя)<br/>
- <code>cat /path/to/some.file</code> - означает что ниже приведено полное содержимое файла <code>some.file</code>, расположенного в каталоге <code>/path/to</code><br/>
- <code>nano /path/to/some.file</code> - означает что надо отредактировать часть файла как указанно<br/>
- в процессе установки MySQL будет произведена предварительная настройка и задан пароль <strong>root</strong>.</p>

<p><strong><em>Gentoo:</em></strong></p>

<pre><code># echo "dev-lang/php gd gd2 curl simplexml tokenizer dom tidy sqlite xml fpm cgi" &gt;&gt; /etc/portage/package.use
# emerge php nginx mysql
</code></pre>

<p>Вначале необходимо произвести начальную настройку MySQL:</p>

<pre><code># emerge --config dev-db/mysql
</code></pre>

<p><strong><em>Debian:</em></strong></p>

<pre><code># cat /etc/apt/sources.list.d/nginx.list
deb http://nginx.org/packages/debian/ wheezy nginx
deb-src http://nginx.org/packages/debian/ wheezy nginx
# wget http://nginx.org/keys/nginx_signing.key &amp;&amp; cat nginx_signing.key | apt-key add -
</code></pre>

<pre><code># apt-get install nginx php5-cli php5-common php5-fpm fcgiwrap mysql-server php5-mysql php5-gd
</code></pre>

<p><strong><em>CentOS.</em></strong> Тут надо заметить, что в своих репозиториях CentOS нет nginx, поэтому добавим репозиторий:</p>

<pre><code># cat /etc/yum.repos.d/nginx.repo
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1
# yum update
</code></pre>

<pre><code># yum install nginx mysql mysql-server php-fpm php-cli php-mysql php-gd
</code></pre>

<p>Настроить MySQL:</p>

<pre><code># service mysql start
# /usr/bin/mysql_secure_installation
</code></pre>

<p>Управление сервисами MySQL, nginx, PHP-FPM и добавление их в автозагрузку:<br/>
<strong><em>Gentoo:</em></strong></p>

<pre><code># /etc/init.d/nginx start
# /etc/init.d/mysql start
# /etc/init.d/php-fpm start

# rc-update add nginx default
# rc-update add mysql default
# rc-update add php-fpm default
</code></pre>

<p><strong><em>Debian:</em></strong></p>

<pre><code># /etc/init.d/nginx start
# /etc/init.d/mysql start
# /etc/init.d/php5-fpm start

# update-rc.d nginx defaults
# update-rc.d mysql defaults
# update-rc.d php5-fpm defaults
</code></pre>

<p><strong><em>CentOS:</em></strong></p>

<pre><code># service mysqld start
# service nginx start
# service php-fpm start

# chkconfig --levels 235 mysqld on
# chkconfig --levels 235 nginx on
# chkconfig --levels 235 php-fpm on
</code></pre>

<p>Сразу после установки nginx понимает только статические файлы, не исполняемые на сервере, и, если установка прошла успешно, запустив его можно проверить отображение &laquo;Welcome to nginx!&raquo; на <code>localhost</code> (<code>127.0.0.1</code>):</p>

<p><img src="/images/posts/2013-06-12/nginx-welcome-to-nginx.png" alt="Welcome to nginx!" /></p>

<p>Впрочем может быть и так:</p>

<p><img src="/images/posts/2013-06-12/nginx-403.png" alt="403 Forbidden" /></p>

<p>Это означает, что сервер не настроен.</p>

<p>Настройки по умолчанию подходят для большинства случаев и не требуют больших изменений на данном этапе. В различных дистрибутивах Linux настройки и месторасположение конфигурационных файлов могут различаться (также это замечание относится к использованию пакетов, установленных из репозиториев, отличных от основного), здесь всё зависит от поддерживающего пакет мейнтейнера.</p>

<p>Неизменным остаётся расположение файла настроек <code>/etc/nginx/nginx.conf</code>. Конфигурации сайтов, дополнительные параметры добавляются в него через опцию <code>include</code>.
В Debian например сейчас конфигурации сайтов добавляются в стиле Apache (добавление конфигурации созданием симлинков):</p>

<pre><code>...
include /etc/nginx/conf.d/*.conf;
include /etc/nginx/sites-enabled/*;
...
</code></pre>

<p>В официальных репозиториях этого нововведения нет и конфигурации сайтов добавляются следующим образов:</p>

<pre><code>...
include /etc/nginx/conf.d/*.conf;
...
</code></pre>

<p>То есть любой файл из каталога <code>/etc/nginx/conf.d/</code> с расширением <code>.conf</code> будет добавлен.
Если каталог <code>/etc/nginx/conf.d</code> - отсутствует, создайте его:</p>

<pre><code># mkdir /etc/nginx/conf.d
</code></pre>

<p>В <code>include</code> как правило присутствует конфигурация сайта по умолчанию, который как раз и выводит надпись &laquo;Welcome to nginx!&raquo; при обращении к <code>localhost</code> (<code>127.0.0.1</code>):</p>

<p>- Debian/Ubuntu - <code>/etc/nginx/sites-enabled/default</code>
- Gentoo/CentOS - <code>/etc/nginx/conf.d/default</code>
- Больше этот файл не нужен - удалите его.</p>

<h4>Права на каталог сайтов</h4>

<p>Создаем (если не существует) каталог для сайтов и устанавливаем права:</p>

<pre><code># mkdir -p /var/www/localhost
# chmod -R a-rwx,u+rwX,g+rX /var/www
# chown www-data:www-data -R /var/www
</code></pre>

<p>Владельцем каталога сайтов должен быть пользователь, от имени которого запущен и работает вэб-сервер. В Debian и Ubuntu это <strong>www&#8209;data</strong>, в Gentoo, CentOS - пользователь <strong>nginx</strong>. В конфигурации за это отвечает директива <code>user</code> (<em>nginx.conf</em>):</p>

<pre><code>user  www-data;
worker_processes  4;
...
</code></pre>

<p>При переносе сайта, а также чтобы был доступ к содержимому сайта у пользователей, входящих в группу <strong>www&#8209;data</strong> необходимы корректные права на содержимое. Права на каталоги <code>775</code>, на файлы <code>664</code>:</p>

<pre><code># find /var/www -type d -exec chmod 775 {} +
# find /var/www -type f -exec chmod 664 {} +
</code></pre>

<p>И добавить себя в группу <strong>www&#8209;data</strong> или <strong>nginx</strong> в зависимости от дистрибутива:</p>

<pre><code># usermod -a -G www-data username
</code></pre>

<h4>Стандартная конфигурация nginx</h4>

<pre><code># Документация http://nginx.org/ru/docs/ngx_core_module.html
# Пользователь от которого работает вэб-сервер
# user nginx;
user www-data;
# Количество рабочих процессов = количество ядер*2 /рекомендуется
worker_processes 4;
pid /var/run/nginx.pid;

events {
   # Максимальное число соединений, которое одновременно
   # может открыть рабочий процесс
   worker_connections 768;
}

http {
   # Используем sendfile, но осторожно, если надо отдавать большие файлы,
   # то sendfile случается вредит
   sendfile on;
   # Ограничиваем размер сегмента отправляемой за одну блокируемую отдачу
   sendfile_max_chunk  128k;
   # Буфер отдачи который используется для обрабатываемых данных
   postpone_output  1460;
   # Размер хеша для доменных имен.
   server_names_hash_bucket_size 64;
   # Размер данных принимаемых post запросом
   client_max_body_size 15m;
   tcp_nopush on;
   tcp_nodelay on;
   keepalive_timeout 65;
   types_hash_max_size 2048;
   # Не говорим врагу версию nginx
   server_tokens off;
   include /etc/nginx/mime.types;
   default_type application/octet-stream;
   # Настройки логирования
   access_log /var/log/nginx/access.log;
   error_log /var/log/nginx/error.log;
   # Настройки компрессии
   gzip on;
   gzip_disable "msie6";
   gzip_vary on;
   gzip_proxied any;
   gzip_comp_level 6;
   gzip_buffers 16 8k;
   gzip_http_version 1.1;
   gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

   include /etc/nginx/conf.d/*.conf;
}
</code></pre>

<h4>Подключение процесс менеджера PHP-FPM к веб-серверу</h4>

<p>* <strong>Важно</strong> - дополнительные пояснения - <a href="http://nixway.org/how-to/fastcgi_php_fpm_for_nginx/">FastCGI (PHP FPM) для nginx</a><br/>
* Связку nginx и PHP-FPM настраиваем на работу через unix сокет</p>

<p>Создадим новую конфигурацию для localhost:</p>

<pre><code># nano /etc/nginx/conf.d/localhost.conf
server {
   server_name localhost;
   # listen 192.168.0.120:80;
   listen 127.0.0.1:80;
   root /var/www/localhost;
   index index.php;

   location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      if (!-f $document_root$fastcgi_script_name) {
         return 404;
      }
      # fastcgi_pass 127.0.0.1:9000;
      fastcgi_pass unix:/var/run/php5-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
   }
}
</code></pre>

<p>и тестовый php-файл в корне</p>

<pre><code># nano /var/www/localhost/index.php
&lt;?php
phpinfo();
?&gt;
</code></pre>

<h4>Отредактируем конфигурацию PHP-FPM:</h4>

<p><strong><em>Gentoo:</em></strong></p>

<pre><code># nano /etc/php/fpm-php5.4/php-fpm.conf
</code></pre>

<p><strong><em>Debian:</em></strong></p>

<pre><code># nano /etc/php5/fpm/pool.d/www.conf
</code></pre>

<p><strong><em>CentOS:</em></strong></p>

<pre><code># nano /etc/php-fpm.d/www.conf
</code></pre>

<p>Отредактируем в этом файле следующие переменные, <code>listen</code>:</p>

<pre><code>...
; Note: This value is mandatory.
; listen = 127.0.0.1:9000
listen = /var/run/php5-fpm.sock
...
</code></pre>

<p><code>user</code>, <code>group</code>:<br/>
* В CentOS и Gentoo - <strong>nginx</strong>, Debian/Ubuntu - <strong>www&#8209;data</strong></p>

<pre><code>; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = www-data
group = www-data
</code></pre>

<p>* в этом файле комментариями является любой текст после символа <code>;</code> (точка с запятой).</p>

<p>После чего перегружаем nginx и PHP-FPM.</p>

<p>Открываем браузер и заходим на <code>localhost</code>, в результате мы должны увидеть тестовую страницу PHP:</p>

<p><img src="/images/posts/2013-06-12/nginx-phpinfo.png" alt="nginx phpinfo" /></p>

<p>Версия nginx на момент написания - стабильная - nginx/1.4.1, но это в репозитории самого nginx, в репозиториях дистрибутивов версии более ранние, и поэтому могут возникнуть небольшие нестыковки, например в openSUSE 12.3 - версия nginx/1.2.9 и это руководство почти полностью подходит, но необходимо использовать <code>/etc/nginx/fastcgi_params</code> <a href="http://nixway.org/how-to/fastcgi_php_fpm_for_nginx/">отсюда</a>.</p>

<h4>Полезные ссылки:</h4>

<p>nginx: <a href="http://nginx.org/ru/">http://nginx.org/ru/</a><br/>
nginx Wiki: <a href="http://wiki.nginx.org/nginxRu">http://wiki.nginx.org/nginxRu</a><br/>
PHP: <a href="http://www.php.net/">http://www.php.net/</a><br/>
PHP-FPM: <a href="http://php-fpm.org/">http://php-fpm.org/</a><br/>
MySQL: <a href="http://www.mysql.com/">http://www.mysql.com/</a></p>

<p>Автор статьи zenon, и изначально он выкладывал её <a href="http://linuxru.org/linux/205">здесь</a>. У себя я публикую статью с разрешения автора и с сохранением авторства.</p>
]]></content>
  </entry>
  
</feed>
